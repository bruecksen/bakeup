# Generated by Django 4.2.11 on 2024-08-21 12:16

import bakeup.core.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import wagtail.search.index


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0093_uploadedfile"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Audience",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField()),
                (
                    "is_default",
                    models.BooleanField(
                        default=False, help_text="Default audience for new contacts"
                    ),
                ),
            ],
            bases=(models.Model, wagtail.search.index.Indexed),
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=255, null=True)),
                ("last_name", models.CharField(blank=True, max_length=255, null=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("is_active", models.BooleanField(default=False)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "audience",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="contacts",
                        to="newsletter.audience",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contact",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NewsletterListPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="NewsletterPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "newsletter_subject",
                    models.CharField(
                        blank=True,
                        help_text="Subject for the newsletter. Defaults to page title if blank.",
                        max_length=1000,
                    ),
                ),
                (
                    "newsletter_schedule_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time when the newsletter should be sent. If blank the newsletter will be sent immediately.",
                        null=True,
                    ),
                ),
                (
                    "web_version",
                    models.BooleanField(
                        default=False,
                        help_text="If checked a web version of the newsletter will be published.",
                    ),
                ),
                ("author", models.CharField(blank=True, max_length=255)),
                (
                    "date",
                    models.DateField(
                        default=datetime.date.today, verbose_name="Publishing date"
                    ),
                ),
                ("body", bakeup.core.fields.StreamField(blank=True)),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (0, "unsent"),
                            (1, "sending"),
                            (2, "sent"),
                            (3, "failed"),
                            (4, "scheduled"),
                        ],
                        default=0,
                        verbose_name="status",
                    ),
                ),
                ("sent_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="Segment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("filter_query", models.TextField(blank=True, null=True)),
                ("name", models.CharField()),
                (
                    "audience",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="segments",
                        to="newsletter.audience",
                    ),
                ),
            ],
            options={
                "verbose_name": "Segment",
                "verbose_name_plural": "Segments",
            },
        ),
        migrations.CreateModel(
            name="Receipt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sent_date", models.DateTimeField(auto_now=True)),
                ("success", models.BooleanField(default=True)),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="newsletter.newsletterpage",
                    ),
                ),
                (
                    "contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="newsletter.contact",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="NewsletterRecipients",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1000)),
                (
                    "audience",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="newsletter.audience",
                    ),
                ),
                (
                    "segment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="newsletter.segment",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Newsletter recipients",
            },
            bases=(models.Model, wagtail.search.index.Indexed),
        ),
        migrations.AddField(
            model_name="newsletterpage",
            name="newsletter_recipients",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="newsletter.newsletterrecipients",
            ),
        ),
        migrations.AddField(
            model_name="newsletterpage",
            name="receipts",
            field=models.ManyToManyField(
                through="newsletter.Receipt",
                to="newsletter.contact",
                verbose_name="receipts",
            ),
        ),
        migrations.AddConstraint(
            model_name="audience",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_default", True)),
                fields=("is_default",),
                name="one_default_audience",
            ),
        ),
    ]
