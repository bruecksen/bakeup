# Generated by Django 3.2.12 on 2023-10-24 15:00

import bakeup.pages.blocks
import bakeup.pages.models
from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.documents.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0083_workflowcontenttype'),
        ('wagtaildocs', '0012_uploadeddocument'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
    ]

    operations = [
        migrations.CreateModel(
            name='CheckoutSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_button_place', models.CharField(default='Jetzt kostenpflichtig bestellen', max_length=1024, verbose_name='Button bestellen')),
                ('order_button_change', models.CharField(default='Jetzt verbindlich ändern', max_length=1024, verbose_name='Button Bestellung ändern')),
                ('order_button_cancel', models.CharField(default='Bestellung komplett stornieren', max_length=1024, verbose_name='Button Bestellung stornieren')),
                ('terms_and_conditions_show', models.BooleanField(default=False, verbose_name='Checkbox AGB anzeigen?')),
                ('terms_and_conditions_text', wagtail.fields.RichTextField(blank=True, null=True, verbose_name='AGB Text')),
            ],
            options={
                'verbose_name': 'Checkout settings',
            },
        ),
        migrations.CreateModel(
            name='ContentPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('content', wagtail.fields.StreamField([('column11', wagtail.blocks.StructBlock([('left', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False)), ('right', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False))], group='Columns')), ('column111', wagtail.blocks.StructBlock([('left', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False)), ('middle', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False)), ('right', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False))], group='Columns')), ('column12', wagtail.blocks.StructBlock([('left', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False)), ('right', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False))], group='Columns')), ('column21', wagtail.blocks.StructBlock([('left', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False)), ('right', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False))], group='Columns')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common')), ('production_days', wagtail.blocks.StructBlock([('production_day_limit', wagtail.blocks.IntegerBlock(default=4, required=False))], group='Bakeup')), ('product_assortment', wagtail.blocks.StructBlock([('only_planned_products', wagtail.blocks.BooleanBlock(default=True, required=False))], group='Bakeup'))], blank=True, null=True, use_json_field=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='FooterSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('footer', wagtail.fields.StreamField([('column11', wagtail.blocks.StructBlock([('left', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False)), ('right', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False))], group='Columns')), ('column111', wagtail.blocks.StructBlock([('left', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False)), ('middle', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False)), ('right', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False))], group='Columns')), ('column12', wagtail.blocks.StructBlock([('left', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False)), ('right', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False))], group='Columns')), ('column21', wagtail.blocks.StructBlock([('left', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False)), ('right', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False))], group='Columns')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], blank=True, null=True, use_json_field=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeneralSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abo_menu_item', models.CharField(choices=[('never', 'Never'), ('always', 'Always'), ('automatically', 'Automatically')], default='automatically', help_text='Soll der Abo Menüpunkt angezeigt werden?', max_length=13)),
                ('brand_font', models.CharField(choices=[('font-handwriting', 'Handwriting'), ('font-quattrocento', 'Serif (quattrocento)'), ('font-sans-serif', 'Sans Serif')], default='font-handwriting', help_text='Welche Schriftart soll der brand name in der Mobilen ansicht haben?', max_length=17)),
                ('brand_uppercase', models.BooleanField(default=False, help_text='Brand name in Großbuchstaben')),
                ('legal_entity', models.CharField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'verbose_name': 'General settings',
            },
        ),
        migrations.CreateModel(
            name='ShopPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('banner_text', wagtail.fields.RichTextField(blank=True, verbose_name='Text')),
                ('banner_cta', wagtail.fields.StreamField([('buttons', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))]))], blank=True, null=True, use_json_field=True, verbose_name='Call to action')),
                ('banner_position', models.CharField(choices=[('top', 'Oben'), ('center', 'Mittig'), ('end', 'Unten')], default='center', max_length=10, verbose_name='Banner Inhalt Position')),
                ('show_production_day', models.BooleanField(default=True, verbose_name='Produktionstag anzeigen?')),
                ('text_no_production_day', wagtail.fields.RichTextField(blank=True, help_text='This text is displayed if no production day is planned.', verbose_name='No production days planned')),
                ('content', wagtail.fields.StreamField([('column11', wagtail.blocks.StructBlock([('left', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False)), ('right', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False))], group='Columns')), ('column111', wagtail.blocks.StructBlock([('left', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False)), ('middle', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False)), ('right', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False))], group='Columns')), ('column12', wagtail.blocks.StructBlock([('left', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False)), ('right', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False))], group='Columns')), ('column21', wagtail.blocks.StructBlock([('left', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False)), ('right', wagtail.blocks.StreamBlock([('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common'))], required=False))], group='Columns')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], group='Common')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], group='Common')), ('button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(label='Text')), ('link', wagtail.blocks.StructBlock([('target', wagtail.blocks.StreamBlock([('page', wagtail.blocks.PageChooserBlock(icon='doc-empty-inverse', label='Page')), ('document', wagtail.documents.blocks.DocumentChooserBlock(icon='doc-full', label='Document')), ('image', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right')])), ('image', wagtail.images.blocks.ImageChooserBlock())], label='Image')), ('url', wagtail.blocks.URLBlock(label='External link')), ('anchor', wagtail.blocks.CharBlock(help_text='Füge Ankerlink zur aktuellen Seite hinzu, zB: <code>#target-id</code>.', label='Anchor link'))], required=True))], required=True))], group='Common')), ('video', bakeup.pages.blocks.EmbedBlock(group='Common')), ('html', wagtail.blocks.RawHTMLBlock(group='Common')), ('space', wagtail.blocks.StructBlock([('space', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')])), ('space_mobile', wagtail.blocks.ChoiceBlock(choices=[(0, '0'), (1, '16px'), (2, '32px'), (3, '48px'), (4, '64px')]))], group='Common')), ('card', wagtail.blocks.StructBlock([('background', wagtail.blocks.ChoiceBlock(choices=[('primary', 'Primary'), ('secondary', 'Secondary'), ('success', 'Green'), ('danger', 'Red'), ('warning', 'Yellow'), ('info', 'Blue'), ('light', 'Light'), ('dark', 'Dark')], label='Card Background Colour')), ('text', wagtail.blocks.StructBlock([('alignment', wagtail.blocks.ChoiceBlock(choices=[('start', 'Left'), ('center', 'Centre'), ('end', 'Right'), ('justify', 'Justified')], label='Text Alignment')), ('text', wagtail.blocks.RichTextBlock())], help_text='Body text for this card.', label='Card Body Text'))], group='Common')), ('hr', wagtail.blocks.StructBlock([], group='Common')), ('carousel', wagtail.blocks.StructBlock([('items', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock()), ('caption', wagtail.blocks.RichTextBlock())])))], group='Common')), ('production_days', wagtail.blocks.StructBlock([('production_day_limit', wagtail.blocks.IntegerBlock(default=4, required=False))], group='Bakeup')), ('product_assortment', wagtail.blocks.StructBlock([('only_planned_products', wagtail.blocks.BooleanBlock(default=True, required=False))], group='Bakeup'))], blank=True, null=True, use_json_field=True)),
                ('banner_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Image')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='EmailSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_subject_prefix', models.CharField(default='[{{site_name}}]', help_text='E-Mail-Betreff Präfix, kann {{site_name}} enthalten.', max_length=1024)),
                ('email_footer', models.TextField(blank=True, help_text='Dieser Footer wird an jede Email angehängt.', null=True)),
                ('send_email_order_confirm', models.BooleanField(default=False, help_text='Soll eine Bestellbestätigungsmail versendet werden?', verbose_name='Bestellbestätigung versenden?')),
                ('email_order_confirm_subject', models.CharField(default='Vielen Dank für Deine Bestellung', help_text='Betreff Bestellbestätigungs E-Mail. Mögliche Tags: {{ site_name }}, {{ first_name }}, {{ last_name }}, {{ email }}, {{ order }}, {{ production_day }}, {{ order_count }}, {{ order_link }}', max_length=1024)),
                ('email_order_confirm', models.TextField(blank=True, help_text='Bestellbestätigungs E-Mail. Mögliche Tags: {{ site_name }}, {{ first_name }}, {{ last_name }}, {{ email }}, {{ order }}, {{ price_total }}, {{ production_day }}, {{ order_count }}, {{ order_link }}, {{ point_of_sale }}', null=True)),
                ('send_email_order_cancellation', models.BooleanField(default=False, help_text='Soll eine Storno E-Mail versendet werden?', verbose_name='Storno E-Mail versenden?')),
                ('email_order_cancellation_subject', models.CharField(default='Ihre Bestellung für den {{ production_day }} wurde storniert', help_text='Betreff Storno E-Mail. Mögliche Tags: {{ site_name }}, {{ first_name }}, {{ last_name }}, {{ email }}, {{ order }}, {{ production_day }}, {{ order_count }}, {{ order_link }}', max_length=1024)),
                ('email_order_cancellation', models.TextField(blank=True, default='Sie haben soeben Ihre komplette Bestellung für den {{ production_day }} gelöscht. Wenn dies ein Versehen war, bestellen Sie die gelöschten Backwaren bitte wieder neu.', help_text='Bestellbestätigungs E-Mail. Mögliche Tags: {{ site_name }}, {{ first_name }}, {{ last_name }}, {{ email }}, {{ order }}, {{ price_total }}, {{ production_day }}, {{ order_count }}, {{ order_link }}, {{ point_of_sale }}', null=True)),
                ('production_day_reminder_subject', models.CharField(default='Deine Bestellung ist abholbereit', help_text='Betreff Erinnerungs E-Mail. Mögliche Tags: {{ site_name }}, {{ first_name }}, {{ last_name }}, {{ email }}, {{ order }}, {{ production_day }}, {{ order_count }}', max_length=1024)),
                ('production_day_reminder_body', models.TextField(default=bakeup.pages.models.get_production_day_reminder_body, help_text='Erinnerungs E-Mail. Mögliche Tags: {{ site_name }}, {{ first_name }}, {{ last_name }}, {{ email }}, {{ order }}, {{ production_day }}, {{ order_count }}')),
                ('email_order_confirm_attachment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtaildocs.document', verbose_name='Attachment')),
            ],
            options={
                'verbose_name': 'E-Mail settings',
            },
        ),
        migrations.CreateModel(
            name='BrandSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_brand_theme_activated', models.BooleanField(default=False, verbose_name='Theme activated?')),
                ('primary_color', models.CharField(blank=True, help_text='as a hex value', max_length=8, null=True, verbose_name='Primary color')),
                ('secondary_color', models.CharField(blank=True, help_text='as a hex value', max_length=8, null=True, verbose_name='Secondary color')),
                ('light_color', models.CharField(blank=True, help_text='as a hex value', max_length=8, null=True, verbose_name='Light color')),
                ('dark_color', models.CharField(blank=True, help_text='as a hex value', max_length=8, null=True, verbose_name='Dark color')),
                ('logo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Image')),
            ],
            options={
                'verbose_name': 'Brand settings',
            },
        ),
    ]
