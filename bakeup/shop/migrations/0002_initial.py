# Generated by Django 3.2.12 on 2023-10-24 15:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('workshop', '0001_initial'),
        ('contrib', '0001_initial'),
        ('shop', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='productiondaytemplate',
            name='product',
            field=models.ForeignKey(limit_choices_to={'is_sellable': True}, on_delete=django.db.models.deletion.PROTECT, related_name='production_day_templates', to='workshop.product'),
        ),
        migrations.AddField(
            model_name='productiondayproduct',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.group', verbose_name='Group'),
        ),
        migrations.AddField(
            model_name='productiondayproduct',
            name='product',
            field=models.ForeignKey(limit_choices_to={'is_sellable': True}, on_delete=django.db.models.deletion.PROTECT, related_name='production_days', to='workshop.product', verbose_name='Product'),
        ),
        migrations.AddField(
            model_name='productiondayproduct',
            name='production_day',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production_day_products', to='shop.productionday'),
        ),
        migrations.AddField(
            model_name='productiondayproduct',
            name='production_plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='workshop.productionplan'),
        ),
        migrations.AddField(
            model_name='pointofsaleopeninghour',
            name='point_of_sale',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='opening_hours', to='shop.pointofsale'),
        ),
        migrations.AddField(
            model_name='pointofsale',
            name='address',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='contrib.address'),
        ),
        migrations.AddField(
            model_name='customerordertemplateposition',
            name='order_template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='shop.customerordertemplate'),
        ),
        migrations.AddField(
            model_name='customerordertemplateposition',
            name='orders',
            field=models.ManyToManyField(related_name='customer_order_template_positions', to='shop.CustomerOrderPosition'),
        ),
        migrations.AddField(
            model_name='customerordertemplateposition',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='customerordertemplateposition_positions', to='workshop.product', verbose_name='Product'),
        ),
        migrations.AddField(
            model_name='customerordertemplate',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='order_templates', to='shop.customer'),
        ),
        migrations.AddField(
            model_name='customerordertemplate',
            name='parent',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child', to='shop.customerordertemplate'),
        ),
        migrations.AddField(
            model_name='customerorderposition',
            name='order',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='shop.customerorder'),
        ),
        migrations.AddField(
            model_name='customerorderposition',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='customerorderposition_positions', to='workshop.product', verbose_name='Product'),
        ),
        migrations.AddField(
            model_name='customerorderposition',
            name='production_plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='workshop.productionplan'),
        ),
        migrations.AddField(
            model_name='customerorder',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='shop.customer', verbose_name='Customer'),
        ),
        migrations.AddField(
            model_name='customerorder',
            name='point_of_sale',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_orders', to='shop.pointofsale', verbose_name='Point of Sale'),
        ),
        migrations.AddField(
            model_name='customerorder',
            name='production_day',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='customer_orders', to='shop.productionday', verbose_name='Production Day'),
        ),
        migrations.AddField(
            model_name='customer',
            name='point_of_sale',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customers', to='shop.pointofsale'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='productiondayproduct',
            unique_together={('production_day', 'product')},
        ),
        migrations.AlterUniqueTogether(
            name='customerorder',
            unique_together={('production_day', 'customer')},
        ),
    ]
